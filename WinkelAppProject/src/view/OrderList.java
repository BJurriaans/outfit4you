/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connectivity.Dbmanager;
import connectivity.QueryManager;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import main.WinkelApplication;
import model.Order;

/**
 *
 * @author davida7
 */
public class OrderList extends javax.swing.JPanel {

    /**
     * Creates new form OrderList
     */
    
    private int i = 0;
    private QueryManager queryManager;
    
    public OrderList() {
        initComponents();
        btnOpslaan.setVisible(false);
        
        List<Order> orders = WinkelApplication.getQueryManager().getOrder();
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        for (Order order : orders) {
            model.addRow(new Object[]{new Integer(order.getOrderId()),
                        order.getName(),
                        order.getAdres(),
                        order.getZip(),
                        order.getCity(),
                        order.getNotes(),
                        order.getPayMethod(),
                        order.getDate()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnTerug = new javax.swing.JButton();
        btnVerwijder = new javax.swing.JButton();
        btnOpslaan = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order_id", "Naam", "Adres", "Postcode", "Woonplaats", "Notes", "Betaalmethode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnTerug.setText("Terug");
        btnTerug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerugActionPerformed(evt);
            }
        });

        btnVerwijder.setText("Verwijder");
        btnVerwijder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerwijderActionPerformed(evt);
            }
        });

        btnOpslaan.setText("Opslaan");
        btnOpslaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpslaanActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnVerwijder)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnOpslaan)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnTerug)
                .add(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 302, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnTerug)
                    .add(btnVerwijder)
                    .add(btnOpslaan))
                .add(0, 13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTerugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerugActionPerformed
        // TODO add your handling code here:
        WinkelApplication.getInstance().showPanel(new view.MedewerkerPanel());
    }//GEN-LAST:event_btnTerugActionPerformed

    private void btnVerwijderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerwijderActionPerformed
        // TODO add your handling code here:
        queryManager = new QueryManager(new Dbmanager());

        int row = jTable1.getSelectedRow();
        
        int order_id = (Integer) (jTable1.getValueAt(row, 0));
        
        queryManager.deleteOrder(order_id);
        WinkelApplication.getInstance().showPanel(new view.OrderList());
        
    }//GEN-LAST:event_btnVerwijderActionPerformed

    private void btnOpslaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpslaanActionPerformed
        // TODO add your handling code here:
        queryManager = new QueryManager(new Dbmanager());
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        
        int order_id = (Integer) (jTable1.getValueAt(row, 0));
        String naam = jTable1.getValueAt(row, 1).toString();
        String adres = jTable1.getValueAt(row, 2).toString();
        String postcode = jTable1.getValueAt(row, 3).toString();
        String woonplaats = jTable1.getValueAt(row, 4).toString();
        String notes = jTable1.getValueAt(row, 5).toString();
        String betaalmethode = jTable1.getValueAt(row, 6).toString();
        
        
        queryManager.updateOrderList(order_id, naam, adres, postcode, woonplaats, notes, betaalmethode);
        
        btnOpslaan.setVisible(false);
    }//GEN-LAST:event_btnOpslaanActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        
         if (i >= 1) {
            btnOpslaan.setVisible(true);
        }
        i++;
    }//GEN-LAST:event_jTable1PropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpslaan;
    private javax.swing.JButton btnTerug;
    private javax.swing.JButton btnVerwijder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
